{"version":3,"sources":["components/TextWrapper.js","components/ImageWrapper.js","App.js","index.js"],"names":["TextWrapper","text","className","ImageWrapper","uploadFile","loading","type","class","name","onChange","e","App","useState","setLoading","imageUrl","setImageUrl","setText","convertImageToText","a","Tesseract","recognize","result","data","formData","FormData","append","target","files","config","headers","axios","post","res","url","console","log","message","useEffect","process","REACT_APP_API_KEY","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAMeA,EAJK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OAAO,8BAAUC,UAAU,gBAAgBD,ICkB9BE,EAnBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAClC,OACE,yBAAKH,UAAU,iBACZG,EACC,yDAEA,8BACE,2BACEC,KAAK,OACLC,MAAM,oBACNC,KAAK,QACLC,SAAU,SAAAC,GAAC,OAAIN,EAAWM,S,iBCqDvBC,MAxDf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNP,EADM,KACGQ,EADH,OAEmBD,mBAAS,MAF5B,mBAENE,EAFM,KAEIC,EAFJ,OAGWH,mBAAS,MAHpB,mBAGNX,EAHM,KAGAe,EAHA,KAKPC,EAAkB,uCAAG,4BAAAC,EAAA,6DACzBL,GAAW,GADc,SAEJM,IAAUC,UAAUN,EAAU,OAF1B,OAEnBO,EAFmB,OAGzBL,EAAQK,EAAOC,KAAKrB,MACpBY,GAAW,GAJc,2CAAH,qDAOlBT,EAAU,uCAAG,WAAMM,GAAN,mBAAAQ,EAAA,sEAEfL,GAAW,IACLU,EAAW,IAAIC,UACZC,OAAO,QAASf,EAAEgB,OAAOC,MAAM,IAClCC,EAAS,CACbC,QAAS,CACP,eAAgB,wBAPL,SAWGC,IAAMC,KAAN,6CAzBR,oCA2BRR,EACAK,GAda,OAWTI,EAXS,OAgBfjB,EAAYiB,EAAIV,KAAKA,KAAKW,KAC1BpB,GAAW,GAjBI,kDAmBfqB,QAAQC,IAAI,KAAMC,SAnBH,0DAAH,sDA6BhB,OANAC,qBAAU,WACQ,MAAZvB,GACFG,MAED,CAACH,IACJoB,QAAQC,IAAR,UAAeG,6HAAYC,oBAEzB,yBAAKrC,UAAU,OACb,yBAAKsC,IAAI,oCAAoCtC,UAAU,OAAOuC,IAAI,KAClE,yBAAKvC,UAAU,aACZG,GAAW,yBAAKH,UAAU,WAClB,MAARD,EACC,kBAAC,EAAD,CAAcI,QAASA,EAASD,WAAYA,IAE5C,kBAAC,EAAD,CAAaH,KAAMA,OCtD7ByC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.988a008f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TextWrapper = ({ text }) => {\n  return <textarea className=\"text-wrapper\">{text}</textarea>;\n};\n\nexport default TextWrapper;\n","import React from \"react\";\n\nconst ImageWrapper = ({ uploadFile, loading }) => {\n  return (\n    <div className=\"image-wrapper\">\n      {loading ? (\n        <h2>Processing... please wait</h2>\n      ) : (\n        <form>\n          <input\n            type=\"file\"\n            class=\"custom-file-input\"\n            name=\"image\"\n            onChange={e => uploadFile(e)}\n          />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ImageWrapper;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Tesseract from \"tesseract.js\";\nimport TextWrapper from \"./components/TextWrapper\";\nimport ImageWrapper from \"./components/ImageWrapper\";\nimport axios from \"axios\";\n\n\nconst API_KEY = \"236fb4b452de5a06f684ffa2c20869a8\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [text, setText] = useState(null);\n\n  const convertImageToText = async () => {\n    setLoading(true);\n    const result = await Tesseract.recognize(imageUrl, \"eng\");\n    setText(result.data.text);\n    setLoading(false);\n  };\n\n  const uploadFile = async e => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"image\", e.target.files[0]);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n\n      const res = await axios.post(\n        `https://api.imgbb.com/1/upload?key=${API_KEY}`,\n        formData,\n        config\n      );\n      setImageUrl(res.data.data.url);\n      setLoading(false);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (imageUrl != null) {\n      convertImageToText();\n    }\n  }, [imageUrl]);\n  console.log(`${process.env.REACT_APP_API_KEY}`);\n  return (\n    <div className=\"App\">\n      <img src=\"https://i.ibb.co/LpxDvR1/logo.png\" className=\"logo\" alt=\"\" />\n      <div className=\"container\">\n        {loading && <div className=\"loader\"></div>}\n        {text == null ? (\n          <ImageWrapper loading={loading} uploadFile={uploadFile} />\n        ) : (\n          <TextWrapper text={text} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}